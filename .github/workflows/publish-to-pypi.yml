# ==================================================================== #
# TITLE:                                                               #
# AMR: An R Package for Working with Antimicrobial Resistance Data     #
#                                                                      #
# SOURCE CODE:                                                         #
# https://github.com/msberends/AMR                                     #
#                                                                      #
# PLEASE CITE THIS SOFTWARE AS:                                        #
# Berends MS, Luz CF, Friedrich AW, et al. (2022).                     #
# AMR: An R Package for Working with Antimicrobial Resistance Data.    #
# Journal of Statistical Software, 104(3), 1-31.                       #
# https://doi.org/10.18637/jss.v104.i03                                #
#                                                                      #
# Developed at the University of Groningen and the University Medical  #
# Center Groningen in The Netherlands, in collaboration with many      #
# colleagues from around the world, see our website.                   # 
#                                                                      #
# This R package is free software; you can freely use and distribute   #
# it for both personal and commercial purposes under the terms of the  #
# GNU General Public License version 2.0 (GNU GPL-2), as published by  #
# the Free Software Foundation.                                        #
# We created this package for both routine data analysis and academic  #
# research and it was publicly released in the hope that it will be    #
# useful, but it comes WITHOUT ANY WARRANTY OR LIABILITY.              #
#                                                                      #
# Visit our website for the full manual and a complete tutorial about  #
# how to conduct AMR data analysis: https://msberends.github.io/AMR/   #
# ==================================================================== #

on:
  push:
    # only on main
    branches: "main"

name: Publish Python Package to PyPI

jobs:
  update-pypi:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
        
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel
        
      - name: Build the Python package
        run: |
          cd data-raw/
          bash _generate_python_wrapper.sh
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          cd PythonPackage/AMR
          python -m twine upload dist/*
          
      - name: Publish to PyPI Testserver
        continue-on-error: true
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TEST_TOKEN }}
        run: |
          cd PythonPackage/AMR
          python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*

      - name: Git push to python-wrapper branch
        run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"
          
          # Create and switch to python-wrapper branch (orphan if it doesn't exist)
          git fetch origin python-wrapper || true
          git checkout python-wrapper || git checkout --orphan python-wrapper
          
          # Delete all existing files from the working tree (safely)
          git rm -rf . || true
          find . -mindepth 1 ! -name 'PythonPackage' -exec rm -rf {} +
      
          # Copy over only PythonPackage/AMR contents from main
          git checkout main -- PythonPackage/AMR
          mv PythonPackage/AMR/* .
          rm -rf PythonPackage
          
          # Commit and push if changes exist
          git add .
          git commit -m "Python wrapper update" || echo "No changes to commit"
          git push origin python-wrapper --force
